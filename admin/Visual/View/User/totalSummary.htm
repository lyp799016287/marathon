<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<title>实时数据</title>
<link rel="stylesheet" type="text/css" media="all" href="/admin.css" />
<link href="/res/websrc/UIlib/ligerUI-1.1.9/skins/Aqua/css/ligerui-all.css" rel="stylesheet" type="text/css" />
<link href= "/res/websrc/UIlib/ligerUI-1.1.9/skins/ligerui-icons.css" rel="stylesheet" type="text/css" />
<link href= "/res/websrc/UIlib/ligerUI-1.1.9/skins/Gray/css/all.css" rel="stylesheet" type="text/css" />

<link href="/res/websrc/css/index.css" rel="stylesheet" type="text/css" />
<script src="/res/websrc/UIlib/jquery/jquery-1.5.2.min.js" type="text/javascript"></script>
<script type="text/javascript" src="/res/js/jquery.cookie.js"></script>
<script type="text/javascript" src="/res/js/loginstatus.js"></script>
<script src="/res/websrc/UIlib/highcharts/highcharts-4.0.3.js" type="text/javascript"></script>
<script src="/res/websrc/UIlib/highcharts/highcharts-3d.js" type="text/javascript"></script>
<script src="/res/websrc/UIlib/jquery/common.js" type="text/javascript"></script>
<script src="/res/websrc/UIlib/ligerUI-1.1.9/js/core/base.js" type="text/javascript"></script>
<script src="/res/websrc/UIlib/ligerUI-1.1.9/js/plugins/ligerGrid.js" type="text/javascript" charset="utf-8"></script>
<script src="/res/websrc/UIlib/ligerUI-1.1.9/js/plugins/ligerDialog.js" type="text/javascript" charset="utf-8"></script>
<script src="/res/websrc/UIlib/highcharts/modules/exporting.js"></script>
<style type="text/css">
{literal}
#table_show_options_sum span { width:150px;display: inline-block;}
#table_show_options_details span { /*width:150px;*/display: inline-block;} 
#table_filter_div span { width:190px;display: inline-block;} 
#show_item_div span { width:190px;display: inline-block;} 
#highlight table{width: 100%;font-size: 14px;}
#highlight table span.tit{font-weight: bold;}
#highlight table td{font-weight: normal;text-align: left;line-height: 1.5rem;padding-left: 1rem;}
{/literal}
</style>
</head>
<body>
<div id="left">
	<div id="userinfo">
		<span id='userName'></span>
	</div>
	<nav>
		<!-- {include file="$menu_path/menu.htm"} -->
	</nav>
</div>
<div class="main" id="main_body">
	<div class="content">
			
		<!-- start highline -->
		<div class="hightline" id="highlight">
			<h3 class="title" id="filter_desc_keydata">截止 <span id="date_show"></span> 的统计数据</h3>
			
			<table>
				<tbody>
					<tr>
						<td>
							<span class='tit'>累计用户</span>
							<br>
							<span class='nu' id="total_user">0</span>
							<span class='nu' id="new_user">+0</span>
						</td>
						<td>
							<span class='tit'>活跃用户</span>
							<br>
							<span class='nu' id="active_user">0</span>
							<span class='nu' id="active_add">+0</span>
						</td>
						<td>
							<span class='tit'>启动次数</span>
							<br>
							<span class='nu' id="open_times">0</span>
							<span class='nu' id="open_add">+0</span><a href=""></a>
						</td>
					</tr>
					<tr>
						<td>
							<span class='nu' id='login_user'>0</span>
							<span class='tit'>累计启动用户</span>
						</td>
						<td>
							<span class='nu' id='weekly_active'>0</span>
							<span class='tit'>周活跃用户</span>
						</td>
						<!-- <td>
							<span class='nu' id=''>0%</span>
							<span class='tit'>月留存率</span>
						</td> -->
					</tr>
				</tbody>
			</table>
            <!-- <ul class="hight_list" id="highlight_list">
				<li>
					<p class='tit'>累计用户</p>
					<p class='nu' id="total_user">0</p>
				</li>
				<li>
					<p class='tit'>活跃用户</p>
					<p class='nu' id="active_user">0</p>
				</li>
				<li>
					<p class='tit'>启动次数</p>
					<p class='nu' id="open_times">0</p>
				</li>
			</ul> -->
		</div>
		<!-- end highline -->
		
		<!-- Start 按小时分布的准实时数据-->
		<!-- <div class="mod_list" id="summary_table"> -->
		<div id="summary_table">
			<div>
		        <!-- <div id="stats_user_detail" class="block_content center" ></div> -->
		        <div id="stats_user_detail"></div>
		    </div>
		</div>
		<!-- End 按小时分布的准实时数据-->
		
		<!--指标解释 S-->
		<div id="terms_definition_div" class="mod_list id_intr">
		    <h3 class="title">指标解释</h3>
			<p><strong>活跃用户: </strong>登录用户 - 新增用户</p>
			<p><strong>启动次数: </strong>用户打开APP的次数（不去重）</p>
		</div>
		<!--指标解释 E-->
	</div>
</div>
<script>
{literal}
$(document).ready(function(){
	
var statSummary = {};

statSummary.header = [
	{
		display: '时间',
		name: 'hour_stamp',
		width: '25%',
		// type: 'float',
		isSort: true,
		align: 'center',
		// render:  window.G.common.formatDecimal,
		issortshow: true
	},
	{
		display: '新增用户',
		name: 'new_user',
		width: '25%',
		type: 'int',
		isSort: true,
		align: 'center',
		render:  window.G.common.formatInt,
		issortshow: true
	},
	{
		display: '活跃用户',
		name: 'active_user',
		width: '25%',
		type: 'int',
		isSort: true,
		align: 'center',
		render:  window.G.common.formatInt,
		issortshow: true
	},
	{
		display: '打开次数',
		name: 'open_times',
		width: '25%',
		type: 'int',
		isSort: true,
		align: 'center',
		render:  window.G.common.formatInt,
		issortshow: true
	},
];

//调用接口
statSummary.cgi = {

	"keyData" : "/Visual/User/keyData",
	"detailData" : "/Visual/User/detailByHour",
	"highlight" : "/Visual/User/keyData",
 };

statSummary.actionHtml = function (){
	// $("#total_user_time").change(statSummary.getTotalUser);
	// $("#mix_user_time").change(statSummary.getMixUser);
};

statSummary.init = function (){
	
	statSummary.actionHtml();
	statSummary.getDetailData();
	statSummary.getHighLight();
};


var gridManager = $("#stats_user_detail").ligerGrid({
	url: statSummary.cgi.detailData,
	pageParmName: 'current_page',
	pagesizeParmName: 'page_size',
	sortnameParmName: 'sort_name',
	sortorderParmName: 'sort_order',
	dataAction: 'server',
	dataType: 'json',
	root: 'data',
	record: 'total',
	method: 'post',
	pageSize: 30,
	pageSizeOptions: [10, 20, 30, 50],
	delayLoad: true,
	onLoading: function() {
		//$.ligerDialog.waitting('根据数据量情况,加载时间不定,请稍等...');
	},
	onAfterShowData: function() {
		//$.ligerDialog.closeWaitting();
	},
});


statSummary.getDetailData = function(){
	var params = {};

	gridManager.setOptions({columns: statSummary.header});
	gridManager.setOptions({parms: params});
	gridManager.loadData();
}


//获取hightline数据
statSummary.getHighLight = function(){
	$.ajax({
		type : 'POST',
		url : statSummary.cgi.highlight,
		dataType : 'json',
		success: function(rdata) {
			if(rdata.code == 1){
				var data = rdata.data;
				// console.log(data);
				$("#total_user").html(window.G.common.formatInt(1,1,data.cumulation_user)); //累计用户
				$("#new_user").html("+" + window.G.common.formatInt(1,1,data.new_user)); //新增用户
				$("#active_user").html(window.G.common.formatInt(1,1,data.totalActive)); //活跃用户
				$("#active_add").html("+" + window.G.common.formatInt(1,1,data.active_user));//活跃用户增量
				$("open_times").html(window.G.common.formatInt(1,1,data.totalOpen)); //启动次数
				$("open_add").html("+" + window.G.common.formatInt(1,1,data.open_times));//启动次数增量
				$("login_user").html(window.G.common.formatInt(1,1,data.totalLogin));//累计启动用户
				$("weekly_active").html(window.G.common.formatInt(1,1,data.weekly_active));//周活跃用户
				//月留存率
				$("#date_show").text(data.time_stamp); //时间戳
			}
		}
	});
};

//获取累计用户数
statSummary.getTotalUser = function(){
	
	var params = {};
	params['type'] = $("#total_user_time").val();

	$.ajax({
		type : 'POST',
		url : statSummary.cgi.totalData,
		dataType : 'json',
		data: '&' + window.G.common.jsonToUrl(params),
		success: function(rdata) {
			if(rdata.code == 1){
				var graph_data = rdata.data;
				showModColumns(graph_data, 'stat_content_chart');
			}
		}
	});
}

//获取新增、活跃用户数
statSummary.getMixUser = function(){
	
	var params = {};
	params['type'] = $("#mix_user_time").val();

	$.ajax({
		type : 'POST',
		url : statSummary.cgi.mixData,
		dataType : 'json',
		data: '&' + window.G.common.jsonToUrl(params),
		success: function(rdata) {
			if(rdata.code == 1){
				var data = rdata.data;
				showTimeLines(data, 'stats_content_detail');
			}
		}
	});
}

//用户医院所在省份分布
statSummary.getProvince = function(){
	$.ajax({
		type : 'POST',
		url : statSummary.cgi.province,
		dataType : 'json',
		success: function(rdata) {
			if(rdata.code == 1){
				var data = rdata.data;
				showPie(data, 'provinceCont', "医生省份分布");
			}
		}
	});
}

//医院等级分布
statSummary.getLevel = function(){
	$.ajax({
		type : 'POST', 
		url : statSummary.cgi.level,
		dataType : 'json', 
		success: function(rdata) {
			var data = rdata.data;
			showPie(data, 'levelCont', "医院等级分布");
		}
	});
}

//医生科室分布
statSummary.getDepart = function(){
	$.ajax({
		type : 'POST', 
		url : statSummary.cgi.depart,
		dataType : 'json', 
		success: function(rdata) {
			var data = rdata.data;
			showPie(data, 'departCont', "医生科室分布");
		}
	});
}

//医生职称分布
statSummary.getTitle = function(){
	console.log("into function");
	$.ajax({
		type : 'POST', 
		url : statSummary.cgi.titleName,
		dataType : 'json', 
		success: function(rdata) {
			var data = rdata.data;
			console.log(data);
			showPie(data, 'titleCont', "医生职称分布");
		}
	});
}

function showPie(rdata, oDiv, title)
{
	if(!rdata)
		return;

	//拼装数据
	var point = [], series = [];
	var tmp_item = [];
	for(var i in rdata){
		tmp_item = [];
		tmp_item.push(rdata[i].field_name);
		tmp_item.push(parseInt(rdata[i].num));
		point.push(tmp_item);
	}

	var r_series = {
		type : 'pie',
		name : '占比',
		data : point
	};
	series.push(r_series);
	// console.log(series);
	//画图
	var chart = new Highcharts.Chart({
		chart: {
            type: 'pie',
            renderTo: oDiv,
			style: {
				fontFamily: '"Lucida Grande", "Lucida Sans Unicode","microsoft yahei",Verdana, Arial, Helvetica, sans-serif', 
				fontSize: '12px'
			},
            options3d: {
                enabled: true,
                alpha: 45,
                beta: 0
            }
        },
        title: {
            text: title
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                depth: 35,
                dataLabels: {
                    enabled: true,
                    format: '{point.name}'
                }
            }
        },
        series : series,
        credits:{
			enabled:false
		},
		exporting:{
			enabled:false
		}
	});

}

function showModColumns(data, oDiv){

	if(!data){
		return;
	}
	
	var d1=[], s_date=[];

	var style_type = 'column';
	
	var series = [];
	
	var data = window.G.common.listSortBy(data, 'datestamp', 'asc');

	for(var i in data){
		s_date.push(data[i].datestamp);
		d1.push(parseInt(data[i].cumulation_user) || null);
	}


	var start_item = {
			name: '累计用户量',
			data: d1
		};

	series.push(start_item);

	var chart = new Highcharts.Chart({
        chart: {
            renderTo: oDiv,
            type: style_type,
            margin: 75,
            options3d: {
                enabled: true,
                alpha: 15, //柱形图倾斜角度
                beta: 15, 
                depth: 50,
                viewDistance: 25
            }
        },
        title: {
            text: '累计用户量'
        },
        subtitle: {
            text: ''
        },
		credits:{
			enabled:false
		},
        plotOptions: {
            column: {
                depth: 25
            }
        },
		xAxis:{
			categories: s_date,
            lineColor:'#e5e5e5',
            tickColor:'#e5e5e5',
            labels:{
            	style:{
            		color:'#7a7a7a',
            	},
            },
            tickPosition:'inside',
            tickLength:4,
            tickmarkPlacement:'on',
			tickInterval: 1
		},
		yAxis:[{
			labels:{
				format:'{value}',
				formatter: function(){
					return window.G.common.formatInt(0,0,this.value);
				},
				style:{
					color:'#f6505c'
				}
			},
			title:{
				enabled:false
			},
			min: 0
		}],
        series: series,
		legend:{
			align:'center',
			verticalAlign:'top',
			borderWidth:0,
			x:380,
			title:{
                style: {
                    fontStyle: 'italic'
                }
            }
		},
		exporting:{
			enabled:false
		}
    });
}

function showTimeLines(data, oDiv){
	if(!data){
		return;
	}

	var d1=[], d2=[], d3=[], s_date=[];

	var style_type = 'line';
	
	var series = [];

	var data = window.G.common.listSortBy(data, 'datestamp', 'asc');

	for(var i in data){
		s_date.push(data[i].datestamp);
		d1.push(parseInt(data[i].login_user));
		d2.push(parseInt(data[i].active_user));
		d3.push(parseInt(data[i].new_user));
	}

	/*console.log(d1);
	console.log(d2);
	console.log(d3);*/

	var start_item = {
			name: '登录用户',
			type:style_type,
			data: d1
		};
	
	series.push(start_item);

	var second_item = {
		name: '活跃用户',
		type:style_type,
		data: d2
	}
	series.push(second_item);

	var third_item = {
		name: '新增用户',
		type:style_type,
		data: d3
	}
	series.push(third_item);


	var chart1 = new Highcharts.Chart({
		title:{
			text:"",
			align:"center",
			style:{
				color: '#b5b5b9',
				fontSize:'14px'
			}
		},
		credits:{
			enabled:false
		},
		chart:{
			renderTo: oDiv,
			style: {
				fontFamily: '"Lucida Grande", "Lucida Sans Unicode","microsoft yahei",Verdana, Arial, Helvetica, sans-serif', 
				fontSize: '12px'
			},
			marginRight:100,
			marginTop:60,
			marginLeft:150
		},
		xAxis:{
			categories: s_date,
            lineColor:'#e5e5e5',
            tickColor:'#e5e5e5',
            labels:{
            	style:{
            		color:'#7a7a7a',
            	},
            },
            tickPosition:'inside',
            tickLength:4,
            tickmarkPlacement:'on',
			tickInterval: 1
		},
		yAxis:[{
			labels:{
				format:'{value}',
				formatter: function(){
					return window.G.common.formatInt(0,0,this.value);
				},
				style:{
					color:'#f6505c'
				}
			},
			title:{
				enabled:false
			},
			min: 0
		}],
		legend:{
			align:'center',
			verticalAlign:'top',
			borderWidth:0,
			x:380,
			itemStyle:{
				fontWeight:'normal',
				color:'#a1a8b4'
			},
			itemHoverStyle: {
				color: '#c9c9c9'
			}
		},
		tooltip:{
			shared:false
		},
		series: series,
		plotOptions:{
			line:{
				marker:{
					fillColor: '#FFFFFF',
                    lineWidth: 2,
                    lineColor: null,
                    symbol: 'circle'
				}
			}
		},
		exporting:{
			enabled:false
		}
	})
}


statSummary.init();

});
{/literal}
</script>
</body>
</html>
			
			
					